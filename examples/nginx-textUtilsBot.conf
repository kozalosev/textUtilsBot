server {
    # Telegram supports ports 443, 80, 88 and 8443.
    listen 8443 ssl;
    server_name bots.example.org;

    # Take into account the option to move these two lines into the server-wide configuration file
    # (like '/etc/nginx/conf.d/server.conf'). If you use one common certificate for all, it would be much better.
    ssl_certificate /your/path/to/certificate.pem;
    ssl_certificate_key /your/path/to/private.key;

    # You may want to override the global logging settings.
    #access_log /dev/null;
    #error_log /home/username/logs/nginx/textUtilsBot.err.log;

    location = /textUtilsBot/metrics/ {
        proxy_pass http://127.0.0.1:8000;
    }

    # Ensure the path and port are consistent with the NAME and APP_PORT constants from 'app/config.py' respectively.
    # or (depending on SOCKET_TYPE)
    # Ensure the paths are consistent with the NAME and UNIX_SOCKET constants from 'app/data/config.py'.
    # For the case of use of Docker Compose, see the `docker-compose.yml` file as well (`ports` section).
    location /textUtilsBot/ {
        proxy_pass http://127.0.0.1:8010;
        #proxy_pass http://unix:/tmp/textUtilsBot.sock;
    }
}
