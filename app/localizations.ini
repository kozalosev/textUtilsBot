[DEFAULT]
help_message = Hi! I'm able to help you with various transformations of text. Just type the 'at' sign (@), my name after it, and continue entering some text. It works in any chat! Note, however, that I cannot process long messages.
help_message_transformers_list = Currently, I support the following transformers:
suggest_send_suggestion = If you want to suggest a new text transformation, send me the text according to the following pattern:
                          `/suggest I want to suggest...`
how_suggest_feature = Write your suggestion right after the command:
                      `/suggest I want to suggest...`

                      Another way is to [create a new issue on GitHub]({}).
suggestion_report_template = User {} <b>suggests</b>:

                             {}
suggestion_sent = You suggestion was sent to the developer!
suggestion_timeout = Oops! The defense system against spammers and flooders has been activated! You will be able to send a new suggestion in {:d} minutes.
suggest_create_issue = To keep an eye on your suggestion, you can additionally [create an issue on GitHub]({}).
decrypt = Decrypt
missing_original_text = Oops! I lost the original text :(
hint_banner_maker = Make a banner
help_banner_maker = Creates a banner: all letters will be converted to upper case and separated with spaces; `T H E   T E X T   I S   M O N O S P A C E`.
hint_language_layout_switcher = Wrong keyboard layout?
help_language_layout_switcher = Converts characters between EN-RU layouts. Дшлу ершыю
hint_typographer_converter = Elite typographer
help_typographer_converter = Makes the following transformations:
                             `--` => `—`
                             `...` => `…`
                             `<<>>` => `«»`
                             `!=` => `≠`
                             `~=` => `≈`
                             `<=` => `≤`
                             `>=` => `≥`
                             `<-` => `←`
                             `->` => `→`
                             `(c)` => `©`
                             `(r)` => `®`
                             `(tm)` => `™`
hint_binary_encoder = Speak like a robot
help_binary_encoder = Converts some text to a binary string. For example, the word `hello` will be transformed into:
                      `01101000 01100101 01101100 01101100 01101111`
hint_binary_decoder = Pretend being a human
hint_hexadecimal_encoder = Be like a programmer
help_hexadecimal_encoder = Converts some text to a hexadecimal string. For example, the word `hello` will be transformed into:
                           `68 65 6c 6c 6f`
hint_hexadecimal_decoder = Plain text
hint_base64_encoder = Encrypted text
help_base64_encoder = Converts some text to a hexadecimal string. For example, the word `hello` will be transformed into `aGVsbG8=`.
hint_base64_decoder = Unencrypted text

[ru]
help_message = Привет! Я могу тебе помочь с различными преобразованием текста. Просто введи моё имя в строке ввода сообщения через собачку, а дальше пиши любой текст. Работает в любом чате! Но не злоупотребляй длинными сообщениями, так как я не смогу их обработать!
help_message_transformers_list = На данный момент я поддерживаю следующие преобразователи:
suggest_send_suggestion = Если ты хочешь предложить какое-то новое преобразование, отправь мне текст по следующему шаблону:
                          `/suggest Хочу предложить...`
how_suggest_feature = Напиши своё предложение сразу после команды:
                      `/suggest Хочу предложить...`

                      Либо можешь [создать новый тикет на GitHub]({}).
suggestion_report_template = Пользователь {} <b>предлагает</b>:

                             {}
suggestion_sent = Предложение отправлено разработчику!
suggestion_timeout = Упс! Сработала защита от спамеров и флудеров! Новое предложение можно будет отправить через {:d} минут.
suggest_create_issue = Чтобы иметь возможность следить за судьбой предложения, можно дополнительно [создать тикет на GitHub]({}).
decrypt = Расшифровать
missing_original_text = Расшифровка потерялась :(
hint_banner_maker = Сделать K P A C U B O
help_banner_maker = Создаёт плакат: все буквы становятся заглавными и разделёнными пробелами, а текст — `М О Н О Ш И Р И Н Н Ы М`.
hint_language_layout_switcher = Проблемы с раскладкой?
help_language_layout_switcher = Если русский текст написан латиницей при неправильной раскладке клавиатуры, то этот режим будет незаменим. Z edthty d 'njv!
hint_typographer_converter = Элитный типограф
help_typographer_converter = Если у Вас не стоит типографская раскладка, то можно использовать специальные сочетания символов и этот режим.
                             `--` => `—`
                             `...` => `…`
                             `<<>>` => `«»`
                             `!=` => `≠`
                             `~=` => `≈`
                             `<=` => `≤`
                             `>=` => `≥`
                             `<-` => `←`
                             `->` => `→`
                             `(c)` => `©`
                             `(r)` => `®`
                             `(tm)` => `™`
hint_binary_encoder = Говорить, как робот
help_binary_encoder = Переводит текст в последовательность двоичных чисел. Например, слово `привет` превратится в:
                      `11010000 10111111 11010001 10000000 11010000 10111000 11010000 10110010 11010000 10110101 11010001 10000010`
hint_binary_decoder = Притвориться человеком
hint_hexadecimal_encoder = Типа программист
help_hexadecimal_encoder = Переводит текст в последовательность шестнадцатеричных чисел. Например, слово `привет` превратится в:
                           `d0 bf d1 80 d0 b8 d0 b2 d0 b5 d1 82`
hint_hexadecimal_decoder = Просто текст
hint_base64_encoder = Шифровка
help_base64_encoder = Кодирует текст в base64-строку. Например, слово `привет` первратится в `0L/RgNC40LLQtdGC`.
hint_base64_decoder = Дешифровка
